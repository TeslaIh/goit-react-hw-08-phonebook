{"version":3,"file":"static/js/198.f388e644.chunk.js","mappings":"gSAce,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYN,OACE,+BACE,iBAAMC,SAVW,SAAAC,GACnBA,EAAEC,iBACFd,EAASe,EAAAA,GAAAA,SAAwB,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAKV,UACE,SAAC,KAAD,CAAOQ,GAAG,OAAOC,GAAG,IAAIC,EAAE,QAA1B,UACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,cAAc,SAApB,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,cAAc,OACdC,UAAU,SAAC,KAAD,CAAUC,MAAM,gBAE5B,SAAC,KAAD,CACEC,KAAK,OACLpB,KAAK,OACLQ,MAAOR,EACPqB,SAAUf,EACVgB,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNC,GAAG,IACHC,UAAQ,QAIZ,UAAC,KAAD,YACE,SAAC,KAAD,CACET,cAAc,OACdC,UAAU,SAAC,KAAD,CAAWC,MAAM,gBAE7B,SAAC,KAAD,CACEC,KAAK,QACLpB,KAAK,QACLQ,MAAON,EACPmB,SAAUf,EACVgB,YAAY,QACZG,GAAG,IACHC,UAAQ,QAIZ,SAAC,KAAD,CACEN,KAAK,WACLpB,KAAK,WACLQ,MAAOJ,EACPiB,SAAUf,EACVgB,YAAY,WACZG,GAAG,IACHC,UAAQ,KAGV,SAAC,KAAD,CAAQN,KAAK,SAASO,YAAY,QAAQC,QAAQ,QAAlD","sources":["views/RegisterView.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport {\n  Button,\n  FormControl,\n  Stack,\n  Input,\n  Flex,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { EmailIcon, EditIcon } from '@chakra-ui/icons';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Stack mx=\"auto\" my=\"8\" w=\"400px\">\n          <FormControl>\n            <Flex flexDirection=\"column\">\n              <InputGroup>\n                <InputLeftElement\n                  pointerEvents=\"none\"\n                  children={<EditIcon color=\"gray.300\" />}\n                />\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  onChange={handleChange}\n                  placeholder=\"Name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  mb=\"3\"\n                  required\n                />\n              </InputGroup>\n\n              <InputGroup>\n                <InputLeftElement\n                  pointerEvents=\"none\"\n                  children={<EmailIcon color=\"gray.300\" />}\n                />\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={handleChange}\n                  placeholder=\"Email\"\n                  mb=\"3\"\n                  required\n                />\n              </InputGroup>\n\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n                placeholder=\"Password\"\n                mb=\"3\"\n                required\n              />\n\n              <Button type=\"submit\" colorScheme=\"green\" variant=\"ghost\">\n                Sign In\n              </Button>\n            </Flex>\n          </FormControl>\n        </Stack>\n      </form>\n    </>\n  );\n}"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","authOperations","mx","my","w","flexDirection","pointerEvents","children","color","type","onChange","placeholder","pattern","title","mb","required","colorScheme","variant"],"sourceRoot":""}